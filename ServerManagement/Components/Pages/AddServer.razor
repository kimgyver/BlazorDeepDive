@page "/servers/add"
@inject NavigationManager NavigationManager
@inject IServersEfCoreRepository ServersEfCoreRepository
@using System.Text.Json

<h3>Add Server</h3>
<br/>
<br/>

<EditForm Model="server" FormName="formServer" OnValidSubmit="Submit">
  <DataAnnotationsValidator></DataAnnotationsValidator>
  <ValidationSummary></ValidationSummary>

  <div class="row mb-3">
    <div class="col-2">
      <label class="col-form-label">Name</label>
    </div>
    <div class="col-6">
      <InputText @bind-Value="server.Name" class="form-control" />
    </div>
    <div class="col">
      <ValidationMessage For="() => server.Name" />
    </div>
  </div>
  <div class="row mb-3">
    <div class="col-2">
      <label class="col-form-label">City</label>
    </div>
    <div class="col-6">
      <InputText @bind-Value="server.City" class="form-control" />
    </div>
    <div class="col">
      <ValidationMessage For="() => server.City" />
    </div>
  </div>

  <div class="row mb-3">
    <div class="col-2">
      <label class="col-form-label">Online</label>
    </div>
    <div class="col-6">
      <InputCheckbox @bind-Value="server.IsOnline" class="form-check-input" />
    </div>
  </div>

  <br/>
  <button class="btn btn-primary" type="submit">Save</button>
</EditForm>

<br/>
<a href="/servers" class="btn btn-primary">Close</a>


@code {
  [SupplyParameterFromForm(FormName = "formServer")]
  private Server? server {get; set;} = new Server() { IsOnline = false };

  private void Submit()
  {
    var input = JsonSerializer.Serialize(server);
    System.Console.WriteLine(input);

    if (server is not null)
    {
      ServersEfCoreRepository.AddServer(server);
    }
    NavigationManager.NavigateTo($"/servers/back_from/{this.server?.City}");
  }
}