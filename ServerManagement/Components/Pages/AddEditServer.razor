@page "/server/{id:int?}"
@inject NavigationManager NavigationManager
@using System.Text.Json

@if (@Id.HasValue)
{
  <h3>Edit Server</h3>
}
else
{
  <h3>Add Server</h3>
}
<br/>
<br/>

@if (server is not null)
{
  <EditForm Model="server" FormName="formServer" OnValidSubmit="Submit">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>

    @if (server.ServerId > 0)
    {
      <InputNumber @bind-Value="server.ServerId" hidden />
    }

    <FieldComponent Label="Name">
      <Control>
        <InputText @bind-Value="server.Name" class="form-control" />
      </Control>
      <ValidationControl>
        <ValidationMessage For="() => server.Name" />
      </ValidationControl>
    </FieldComponent>

    <FieldComponent Label="City">
      <Control>
        <InputText @bind-Value="server.City" class="form-control" />
      </Control>
      <ValidationControl>
        <ValidationMessage For="() => server.City" />
      </ValidationControl>
    </FieldComponent>

    <FieldComponent Label="Online2">
      <Control>
        <InputCheckbox @bind-Value="server.IsOnline" class="form-check-input" />
      </Control>
    </FieldComponent>

    <br/>
    @if (server.ServerId > 0)
    {
      <button class="btn btn-primary" type="submit">Update</button>
    }
    else
    {
      <button class="btn btn-primary" type="submit">Save</button>
    }
    &nbsp;
    <a href="/servers" class="btn btn-primary">Close</a>
  </EditForm>
}

@code {
  [Parameter]
  public int? Id { get; set; }

  [SupplyParameterFromQuery]
  public string? City { get; set; }

  [SupplyParameterFromForm]
  private Server? server { get; set; }

  protected override void OnParametersSet()
  {
    if (this.Id.HasValue)
      server ??= ServersRepository.GetServerById(this.Id.Value);
    else
      server ??= new Server() { IsOnline = false };

    if (server is not null && !string.IsNullOrEmpty(this.City))
    {
      server.City = this.City;
    }
  }

  private void Submit()
  {
    var input = JsonSerializer.Serialize(server);
    System.Console.WriteLine(input);

    if (server is not null)
    {
      if (this.Id.HasValue)
        ServersRepository.UpdateServer(server.ServerId, server);
      else
        ServersRepository.AddServer(server);
    }
    NavigationManager.NavigateTo($"/servers/back_from/{this.server?.City}");
  }
}