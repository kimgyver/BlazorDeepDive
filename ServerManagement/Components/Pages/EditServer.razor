@page "/servers/{id:int}"
@inject NavigationManager NavigationManager
@using System.Text.Json

<h3>Edit Server</h3>
<br/>
<br/>

@if (server is not null)
{
  <EditForm Model="server" FormName="formServer" OnValidSubmit="Submit">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>
    <InputNumber @bind-Value="server.ServerId" hidden />

    <FieldComponent Label="Name">
      <Control>
        <InputText @bind-Value="server.Name" class="form-control" />
      </Control>
      <ValidationControl>
        <ValidationMessage For="() => server.Name" />
      </ValidationControl>
    </FieldComponent>

    <FieldComponent Label="City">
      <Control>
        <InputText @bind-Value="server.City" class="form-control" />
      </Control>
      <ValidationControl>
        <ValidationMessage For="() => server.City" />
      </ValidationControl>
    </FieldComponent>

    <FieldComponent Label="Online2">
      <Control>
        <InputCheckbox @bind-Value="server.IsOnline" class="form-check-input" />
      </Control>
    </FieldComponent>

    <br/>
    <button class="btn btn-primary" type="submit">Update</button>
  </EditForm>
}
<br/>
<a href="/servers" class="btn btn-primary">Close</a>


@code {
  [Parameter]
  public int Id { get; set; }

  [SupplyParameterFromForm(FormName = "formServer")]
  private Server? server {get; set;}

  protected override void OnParametersSet()
  {
      server ??= ServersRepository.GetServerById(this.Id);
  }

  private void Submit()
  {
    var input = JsonSerializer.Serialize(server);
    System.Console.WriteLine(input);

    if (server is not null)
    {
      ServersRepository.UpdateServer(server.ServerId, server);
    }
    NavigationManager.NavigateTo("/servers");
  }
} 