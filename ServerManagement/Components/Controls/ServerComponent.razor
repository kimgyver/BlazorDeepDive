@inject NavigationManager NavigationManager

@if (Server is not null)
{
    <tr style="background-color: @GetBackgroundColour()">
        <td>
            @Server.Name
        </td>
        <td>
            @Server.City
        </td>
        <td style="color:@((Server.IsOnline ? "green" : "red"))">
            @(Server.IsOnline ? "online" : "offline")
        </td>
        <td>
            @if (Server.IsOnline)
            {
                Random random = new Random();
                int randomNumber = random.Next(0, 500);
                <text>@randomNumber</text>
            }
            else
            {
                <text>N/A</text>
            }
        </td>
        <td>
            @if (Server.IsOnline)
            {
                <button type="button"
                        class="btn btn-outline-danger"
                        @onclick="@(()=> {Server.IsOnline = false;})">
                    Turn Off
                </button>
            }
            else
            {
                <button type="button"
                        class="btn btn-outline-success"
                        @onclick="@(()=> {Server.IsOnline = true;})">
                    Turn On
                </button>
            }
            &nbsp;
            <a href="/server/@Server.ServerId" class="btn btn-outline-primary">Edit</a>
        </td>
        <td>
            <EditForm Model="Server"
                      FormName="@($"form-Server-{Server.ServerId}")"
                      OnValidSubmit="@(() => { DeleteServer(Server.ServerId); })">
                <button type="submit" class="btn btn-primary">Delete</button>
            </EditForm>
        </td>
    </tr>
}


@code {
  [Parameter]
  public Server? Server { get; set; }

  [CascadingParameter(Name = "SelectedCity")]
  public string? SelectedCity { get; set; }

  private void DeleteServer(int serverId)
  {
    if (serverId > 0)
    {
      ServersRepository.DeleteServer(serverId);
      @* servers= ServersRepository.GetServersByCity("Toronto"); *@
      NavigationManager.NavigateTo("/servers", true);
    }
  }

  private string GetBackgroundColour()
  {
    if (SelectedCity is null) return "white";

    switch (this.SelectedCity)
    {
      case "Toronto": return "powderblue";
      case "Montreal": return "lightgray";
      case "Ottawa": return "palegreen";
      case "Calgary": return "pink";
      default: return "white";
    }
  }
}