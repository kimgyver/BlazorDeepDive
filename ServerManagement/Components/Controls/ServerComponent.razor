@rendermode InteractiveServer


@if (server is not null)
{
    <div style="@($"color: {(server.IsOnline ? "green" : "red")}")">
      @server.Name is in @server.City that is @(server.IsOnline ? "online": "offline")
      &nbsp;;
      <button type="button" class="btn btn-primary" @onclick="ChangeStatus">Turn On/Off</button>
    </div>
}

@* @if (server is not null)
{
  <EditForm Enhance="true" Model="server" FormName="serverComponentForm" OnSubmit="ChangeServerStatus">
    <InputNumber @bind-Value="server.ServerId" hidden />
    <InputText @bind-Value="server.Name" hidden />
    <InputText @bind-Value="server.City" hidden />
    <InputCheckbox @bind-Value="server.IsOnline" hidden />

    <div style="@($"color: {(server.IsOnline ? "green" : "red")}")">
      @server.Name is in @server.City that is @(server.IsOnline ? "online": "offline")
      &nbsp;;
      <button type="submit" class="btn btn-primary">Turn On/Off</button>
    </div>
  </EditForm>
} *@


@code {
  private Server server { get; set; } = new Server { Name = "Server 1", City = "Toronto"};

  private void ChangeStatus()
  {
    if (server is not null)
    {
      server.IsOnline = !server.IsOnline;
    }
  }

  @* [SupplyParameterFromForm]
  private Server? server { get; set; }

  protected override void OnParametersSet()
  {
    server ??= new Server { Name = "Server 1", City = "Toronto"};
  }

  private void ChangeServerStatus()
  {
    if (server is not null)
    {
      server.IsOnline = !server.IsOnline;
    }
  } *@
}