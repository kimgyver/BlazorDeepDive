@page "/todolist"
@rendermode InteractiveServer

<h3>To Do</h3>
<br />
<button class="btn btn-primary" type="button" @onclick="AddTask">Add Task</button>
<br />
<br />

@if (items is not null && items.Any())
{
  <ul class="list-unstyled">
    @foreach (var item in items)
    {
      <li @key="item.Id">
        <div class="mb-2 row">
          <div class="col-1" style="width: 30px">
            <input type="checkbox"
              style="vertical-align: middle;"
              class="form-check-input"
              @bind-value="item.IsCompleted"
              checked="@item.IsCompleted">
          </div>
          <div class="col">
            @if (item.IsCompleted)
            {
              <input type="text" 
                style="vertical-align: middle;"
                class="form-control border-0 text-decoration-line-through" 
                @bind-value="item.Name"
                disabled />
            }
            else{
              <input type="text" 
                style="vertical-align: middle;"
                class="form-control border-0" 
                @bind-value="item.Name" />
            }
          </div
          <div class="col">
            @if (item.IsCompleted)
            {
              <text>Completed at: @item.DateCompleted.ToLongDateString()</text>
            }
          </div>>

        </div>
      </li>
    }    
  </ul>
}

@code {
  private List<ToDoItem> items = ToDoItemsRepository.GetItems();

  private void AddTask()
  {
    ToDoItemsRepository.AddItem(new ToDoItem { Name = "New Task"});
    items = ToDoItemsRepository.GetItems();
    System.Console.WriteLine($"AddItem => {items.Count}");
  }
}